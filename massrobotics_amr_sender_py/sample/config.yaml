# ====================================================================
# MassRobotics AMR Interoperability Standard sender configuration file
# ====================================================================
#
# Parameters that are used to configure ROS2 node for connecting to MassRobotics compatible servers.
# The `server` section expects a string with a WebSocket server URI, while the `mappings` section
# contains a list of paramaters for configuring the ROS2 node. As per AMR Interop Standard,
# mandatory parameters are `uuid`, `manufacturerName`, `robotModel`, `robotSerialNumber` and
# `baseRobotEnvelope` (full spec https://github.com/MassRobotics-AMR/AMR_Interop_Standard/).
#
# Translation to AMR Interop Standard messages might be direct (i.e. a string to a report message
# field) or complex in case of ROS2 message having data that maps to many AMR report message fields.
# For this reason, some configuration parameters below expect a particular ROS2 message type e.g.
# fields on a ROS2 message of type `sensor_msgs/msg/BatteryState` are translated into AMR Interop
# Status Report fields `batteryPercentage`, `remainingRunTime` and `loadPercentageStillAvailable`.
#
# In addition to local values i.e. strings or objects, the `mappings` section supports a variety of
# sources from where the parameter value can be obtained: `envVar`, `rosTopic` and `rosParameter`.

config:
  server: "ws://localhost:3000"
  mappings:
    # Mapping definition for Identity report messages

    # UUID that all subsequent messages should reference.
    # It is obtained from the environment variable ``MY_UUID``. If the variable
    # is not defined or if it has no value an error will be thrown.
    uuid:
      valueFrom:
        envVar: MY_UUID

    # Robot manufacturer name
    manufacturerName: Spoonlift

    # Robot model
    robotModel: "spoony1.0"

    # Unique robot identifier
    robotSerialNumber: "2172837"

    # Robot footprint based on orientation, centered on current location
    baseRobotEnvelope:
      x: 2
      y: 1
      z: 3

    # Robot max speed in m/s
    maxSpeed: 2.5

    # Estimated runtime in hours
    maxRunTime: 8

    # Emergency contact - preferrably phone number
    emergencyContactInformation: "555-5555"

    # Robot charger type
    chargerType: "24V plus"

    # Vendor that supplied robot
    supportVendorName: "We-B-Robots"

    # Vendor contact information
    supportVendorContactInformation: "support@we-b-robots.com"

    # Link to product documenation
    productDocumentation: "https://spoon.lift/support/docs/spoony1.0"

    # Link to thumbnail graphic stored as PNG
    thumbnailImage: "https://spoon.lift/media/spoony1.0.png"

    # Cargo description
    cargoType: "Anything solid or liquid"

    # Max volume of cargo in meters
    cargoMaxVolume:
      x: 2
      y: 2
      z: 1

    # Max weight of cargo in kg
    cargoMaxWeight: "4000"


    # Mapping definition for Status report messages

    # Current action the robot is performing
    operationalState:
      valueFrom:
        rosTopic: /mode
        msgType: std_msgs/String

    # Current location of AMR
    location:
      valueFrom:
        rosTopic: /location
        msgType: geometry_msgs/msg/PoseStamped

    # Current velocity of AMR
    velocity:
      valueFrom:
        rosTopic: /velocity
        msgType: geometry_msgs/msg/TwistStamped

    # Percentage of battery remaining
    # The ``msgField`` indicates a message field where the battery
    # percentage value will be extracted
    batteryPercentage:
      valueFrom:
        rosTopic: /battery
        msgType: sensor_msgs/msg/BatteryState
        msgField: percentage

    # Estimated remaining runtime in hours
    remainingRunTime:
      valueFrom:
        rosTopic: /battery_runtime
        msgType: std_msgs/Float32

    # Percentage of capacity still available
    loadPercentageStillAvailable:
      valueFrom:
        rosTopic: /load_perc_available
        msgType: std_msgs/Float32

    # List of current error states
    # Error codes are expected to be comma-separated strings published on a topic of
    # type std_msgs/msg/String. Those errors are then transformed into an array, as
    # required on the MassRobotics standard.
    errorCodes:
      valueFrom:
        rosTopic: /troubleshooting/errorcodes
        msgType: std_msgs/msg/String

    # Target destination(s) of Automated Guided Vehicle (AGV)
    destinations:
      valueFrom:
        rosTopic: /plan
        msgType: nav_msgs/Path

    # Short term path of Automated Guided Vehicle (AGV) ~10 sec
    path:
      valueFrom:
        rosTopic: /local_plan
        msgType: nav_msgs/Path

    # Id of planarDatum AMR is referencing
    rosFrameToPlanarDatumUUID:
      # required since Mass expects frames to be referenced using uuids
      map: "196522ad-51fa-4796-9b31-a35b0f8d0b54"
      floor1: "096522ad-61fa-4796-9b31-e35b0f8d0b26"
      odom: "6ec7a6d0-21a9-4f04-b680-e7c640a0687e"
